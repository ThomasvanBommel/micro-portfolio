########################
### Front-end Deployment
########################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-end-deployment
spec:
  selector:
    matchLabels:
      app: front-end
  replicas: 2
  template:
    metadata:
      labels:
        app: front-end
    spec:
      containers:
      - name: front-end
        image: cekeh/micro-portfolio-front-end
        ports:
        - containerPort: 80

---
########################
### Front-end Service
########################
apiVersion: v1
kind: Service
metadata:
  name: front-end-service
spec:
  selector:
    app: front-end
  ports:
  - port: 80
    nodePort: 30000
  type: NodePort

---
########################
### User Deployment
########################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-deployment
spec:
  selector:
    matchLabels:
      app: user
  replicas: 2
  template:
    metadata:
      labels:
        app: user
    spec:
      containers:
      - name: user
        image: cekeh/micro-portfolio-user
        ports:
        - containerPort: 80

---
########################
### User Service
########################
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  selector:
    app: user
  ports:
  - port: 80

---
########################
### Postgres Database Persistent Storage
########################
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-volume
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
  - ReadWriteMany
  hostPath:
    path: "/mnt/data"

---
########################
### Postgres Database Storage Claim
########################
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 5Gi

---
########################
### Postgres Database Deployment
########################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  selector:
    matchLabels:
      app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: db
        - name: POSTGRES_PASSWORD
          value: ABC123
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-data
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-claim

---
########################
### Postgres Database Service
########################
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
  - port: 5432